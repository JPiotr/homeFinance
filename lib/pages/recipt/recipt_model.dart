import 'dart:ffi';

import 'package:equatable/equatable.dart';

/// generate by https://javiercbk.github.io/json_to_dart/
class AutogeneratedRecipt {
  final List<ReciptModel> results;

  AutogeneratedRecipt({required this.results});

  factory AutogeneratedRecipt.fromJson(Map<String, dynamic> json) {
    var temp = <ReciptModel>[];
    if (json['results'] != null) {
      temp = <ReciptModel>[];
      json['results'].forEach((v) {
        temp.add(ReciptModel.fromJson(v as Map<String, dynamic>));
      });
    }
    return AutogeneratedRecipt(results: temp);
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['results'] = results.map((v) => v.toJson()).toList();
    return data;
  }
}

class ReciptModel extends Equatable {
  final int id;
  final String name;
  final double value;
  final DateTime dateTime;

  ReciptModel(this.id, this.name, this.value, this.dateTime);

  @override
  List<Object> get props => [id, name, value, dateTime];

  factory ReciptModel.fromJson(Map<String, dynamic> json) {
    return ReciptModel(json['id'] as int, json['name'] as String,
        json['value'] as double, json['dateTime'] as DateTime);
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['value'] = value;
    data['dateTime'] = dateTime;
    return data;
  }
}
